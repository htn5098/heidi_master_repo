#!/bin/bash
#PBS -l nodes=1:ppn=1 
#PBS -l pmem=2gb
#PBS -l walltime=02:00:00
#PBS -l feature=rhel7
#PBS -A cxc693_b_g_hc_default
#PBS -j oe
#PBS -N CWD_ETO #MACA GCM downloaded from GridMET 

# Loading modules
module purge
module load gcc/8.3.1
module load parallel/20190222

# Export to a tmp folder with more space
if test -d "/storage/home/htn5098/scratch/tmpBigdata" 
then
  echo "Folder exists"
else
  mkdir -p /storage/home/htn5098/scratch/tmpBigdata
  echo "Folder created"
fi

export TMPDIR=/storage/home/htn5098/scratch/tmpBigdata #to avoid running out of space when running jobs in parallel
echo "Job started on `hostname` at `date`"
START=$(date +%s)

# Go to the directory
cd /storage/home/htn5098/work/DataAnalysis/src/jobs/

# Information of GCM, period and variable
gcm=`awk -v line=$line 'NR==line {print $1}' ../../data/external/MACA_GCMs.txt` # reading the name of the GCM from a .txt file
echo "Processing for $gcm"
period=(historical rcp45 rcp85) #change names to wanted period
interimpath=/storage/home/htn5098/scratch/DataAnalysis/data/interim
for i in "${period[@]}"
do
	# Extract relevant climate variables from .nc file
	one=`qsub -l nodes=1:ppn=20 -l pmem=50gb -N MACAV2_extr -v "gcm=$gcm,period=$i,interimpath=$interimpath" CWDSERC_extract_data.pbs -l feature=rhel7` 
	oneID=`echo $one | awk 'match($0,/[0-9]+/){print substr($0, RSTART, RLENGTH)}'`
	echo $one
	
	# Intermediate steps for vpd, Rns, clearsky ratio
	two=`qsub -l nodes=1:ppn=10 -l pmem=25gb -N MACAV2_vpd -v "gcm=$gcm,period=$i,interimpath=$interimpath" CWDSERC_rns.pbs -W depend=afterok:$oneID -l feature=rhel7` 
	twoID=`echo $two | awk 'match($0,/[0-9]+/){print substr($0, RSTART, RLENGTH)}'`
	echo $two
	three=`qsub -l nodes=1:ppn=10 -l pmem=25gb -N MACAV2_rns -v "gcm=$gcm,period=$i,interimpath=$interimpath" CWDSERC_vpd.pbs -W depend=afterok:$oneID -l feature=rhel7`
	threeID=`echo $three | awk 'match($0,/[0-9]+/){print substr($0, RSTART, RLENGTH)}'`
	echo $three
	
	# Calculate ETo 
	four=`qsub -l nodes=1:ppn=10 -l pmem=35gb -N MACAV2_eto -v "gcm=$gcm,period=$i,interimpath=$interimpath" CWDSERC_eto_cal.pbs -W depend=afterok:$twoID:$threeID -l feature=rhel7`
	fourID=`echo $four | awk 'match($0,/[0-9]+/){print substr($0, RSTART, RLENGTH)}'`
	echo $four
	
	# Aggregate gridded ETo to monthly level
	five=`qsub -l nodes=1:ppn=10 -l pmem=40gb -N MACAV2_gagg -v "gcm=$gcm,period=$i,interimpath=$interimpath" CWDSERC_eto_grid_summary.pbs -W depend=afterok:$fourID -l feature=rhel7` 
	fiveID=`echo $five | awk 'match($0,/[0-9]+/){print substr($0, RSTART, RLENGTH)}'`
	echo $five
	
	# # Aggregate gridded ETo to monthly level
	# six=`qsub -v "gcm=$gcm,period=$i,interimpath=$interimpath" CWDSERC_eto_county_summary.pbs -W depend=afterok:$fiveID -l feature=rhel7` #-W depend=afterok:$fourID
	# sixID=`echo $six | awk 'match($0,/[0-9]+/){print substr($0, RSTART, RLENGTH)}'`
	# echo $six
	
	#sleep 3m # let the system rest for 3 minutes before running the next loop
done

echo "Job ended `date`"
END=$(date +%s)
sec=$((END-START))
min=$((sec/60))
echo "Time elapsed: $sec seconds"